Terminals which are not used

   INT


Grammar

    0 $accept: Program $end

    1 Program: ExternDefList

    2 ExternDefList: ExternDef ExternDefList
    3              | /* empty */

    4 ExternDef: Specifier ExternDecList ';'
    5          | Specifier ';'
    6          | Specifier FunDec CompSt
    7          | Specifier FunDec ';'
    8          | Specifier error

    9 ExternDecList: VarDec
   10              | VarDec ',' ExternDecList

   11 Specifier: TYPE
   12          | StructSpecifier

   13 StructSpecifier: STRUCT OptTag '{' DefList '}'
   14                | STRUCT Tag

   15 OptTag: IDENTIFIER
   16       | /* empty */

   17 Tag: IDENTIFIER

   18 VarDec: IDENTIFIER
   19       | VarDec '[' NUMBER ']'
   20       | VarDec '[' error ']'

   21 FunDec: IDENTIFIER '(' VarList ')'
   22       | IDENTIFIER '(' ')'

   23 VarList: ParamDec ',' VarList
   24        | ParamDec

   25 ParamDec: Specifier VarDec

   26 CompSt: '{' DefList StmtList '}'
   27       | '{' DefList StmtList error

   28 StmtList: Stmt StmtList
   29         | /* empty */

   30 Stmt: Exp ';'
   31     | CompSt
   32     | RETURN Exp ';'
   33     | RETURN error ';'
   34     | IF '(' Exp ')' Stmt
   35     | IF '(' Exp ')' Stmt ELSE Stmt
   36     | IF '(' Exp ')' error ELSE Stmt
   37     | WHILE '(' Exp ')' Stmt
   38     | FOR '(' Exp ';' Exp ';' Exp ')' Stmt
   39     | Exp error

   40 DefList: Def DefList
   41        | /* empty */

   42 Def: Specifier DecList ';'
   43    | Specifier error ';'

   44 DecList: Dec
   45        | Dec ',' DecList

   46 Dec: VarDec
   47    | VarDec '=' Exp

   48 Exp: Exp '=' Exp
   49    | Exp AND Exp
   50    | Exp OR Exp
   51    | Exp RELOP Exp
   52    | Exp '+' Exp
   53    | Exp '-' Exp
   54    | Exp '*' Exp
   55    | Exp '/' Exp
   56    | '(' Exp ')'
   57    | '-' Exp
   58    | '!' Exp
   59    | IDENTIFIER '(' Args ')'
   60    | IDENTIFIER '(' error
   61    | IDENTIFIER '(' ')'
   62    | Exp '[' Exp ']'
   63    | Exp '[' error
   64    | Exp '.' IDENTIFIER
   65    | IDENTIFIER
   66    | NUMBER
   67    | FLOAT

   68 Args: Exp ',' Args
   69     | Exp


Terminals, with rules where they appear

$end (0) 0
'!' (33) 58
'(' (40) 21 22 34 35 36 37 38 56 59 60 61
')' (41) 21 22 34 35 36 37 38 56 59 61
'*' (42) 54
'+' (43) 52
',' (44) 10 23 45 68
'-' (45) 53 57
'.' (46) 64
'/' (47) 55
';' (59) 4 5 7 30 32 33 38 42 43
'=' (61) 47 48
'[' (91) 19 20 62 63
']' (93) 19 20 62
'{' (123) 13 26 27
'}' (125) 13 26
error (256) 8 20 27 33 36 39 43 60 63
LOWER_THAN_ELSE (258)
ELSE (259) 35 36
RELOP (260) 51
AND (261) 49
OR (262) 50
INT (263)
FLOAT (264) 67
IDENTIFIER (265) 15 17 18 21 22 59 60 61 64 65
STRUCT (266) 13 14
RETURN (267) 32 33
IF (268) 34 35 36
WHILE (269) 37
TYPE (270) 11
NUMBER (271) 19 66
FOR (272) 38


Nonterminals, with rules where they appear

$accept (33)
    on left: 0
Program (34)
    on left: 1, on right: 0
ExternDefList (35)
    on left: 2 3, on right: 1 2
ExternDef (36)
    on left: 4 5 6 7 8, on right: 2
ExternDecList (37)
    on left: 9 10, on right: 4 10
Specifier (38)
    on left: 11 12, on right: 4 5 6 7 8 25 42 43
StructSpecifier (39)
    on left: 13 14, on right: 12
OptTag (40)
    on left: 15 16, on right: 13
Tag (41)
    on left: 17, on right: 14
VarDec (42)
    on left: 18 19 20, on right: 9 10 19 20 25 46 47
FunDec (43)
    on left: 21 22, on right: 6 7
VarList (44)
    on left: 23 24, on right: 21 23
ParamDec (45)
    on left: 25, on right: 23 24
CompSt (46)
    on left: 26 27, on right: 6 31
StmtList (47)
    on left: 28 29, on right: 26 27 28
Stmt (48)
    on left: 30 31 32 33 34 35 36 37 38 39, on right: 28 34 35 36 37
    38
DefList (49)
    on left: 40 41, on right: 13 26 27 40
Def (50)
    on left: 42 43, on right: 40
DecList (51)
    on left: 44 45, on right: 42 45
Dec (52)
    on left: 46 47, on right: 44 45
Exp (53)
    on left: 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65
    66 67, on right: 30 32 34 35 36 37 38 39 47 48 49 50 51 52 53 54
    55 56 57 58 62 63 64 68 69
Args (54)
    on left: 68 69, on right: 59 68


state 0

    0 $accept: . Program $end

    STRUCT  shift, and go to state 1
    TYPE    shift, and go to state 2

    $default  reduce using rule 3 (ExternDefList)

    Program          go to state 3
    ExternDefList    go to state 4
    ExternDef        go to state 5
    Specifier        go to state 6
    StructSpecifier  go to state 7


state 1

   13 StructSpecifier: STRUCT . OptTag '{' DefList '}'
   14                | STRUCT . Tag

    IDENTIFIER  shift, and go to state 8

    $default  reduce using rule 16 (OptTag)

    OptTag  go to state 9
    Tag     go to state 10


state 2

   11 Specifier: TYPE .

    $default  reduce using rule 11 (Specifier)


state 3

    0 $accept: Program . $end

    $end  shift, and go to state 11


state 4

    1 Program: ExternDefList .

    $default  reduce using rule 1 (Program)


state 5

    2 ExternDefList: ExternDef . ExternDefList

    STRUCT  shift, and go to state 1
    TYPE    shift, and go to state 2

    $default  reduce using rule 3 (ExternDefList)

    ExternDefList    go to state 12
    ExternDef        go to state 5
    Specifier        go to state 6
    StructSpecifier  go to state 7


state 6

    4 ExternDef: Specifier . ExternDecList ';'
    5          | Specifier . ';'
    6          | Specifier . FunDec CompSt
    7          | Specifier . FunDec ';'
    8          | Specifier . error

    error       shift, and go to state 13
    ';'         shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    ExternDecList  go to state 16
    VarDec         go to state 17
    FunDec         go to state 18


state 7

   12 Specifier: StructSpecifier .

    $default  reduce using rule 12 (Specifier)


state 8

   15 OptTag: IDENTIFIER .
   17 Tag: IDENTIFIER .

    '{'       reduce using rule 15 (OptTag)
    $default  reduce using rule 17 (Tag)


state 9

   13 StructSpecifier: STRUCT OptTag . '{' DefList '}'

    '{'  shift, and go to state 19


state 10

   14 StructSpecifier: STRUCT Tag .

    $default  reduce using rule 14 (StructSpecifier)


state 11

    0 $accept: Program $end .

    $default  accept


state 12

    2 ExternDefList: ExternDef ExternDefList .

    $default  reduce using rule 2 (ExternDefList)


state 13

    8 ExternDef: Specifier error .

    $default  reduce using rule 8 (ExternDef)


state 14

    5 ExternDef: Specifier ';' .

    $default  reduce using rule 5 (ExternDef)


state 15

   18 VarDec: IDENTIFIER .
   21 FunDec: IDENTIFIER . '(' VarList ')'
   22       | IDENTIFIER . '(' ')'

    '('  shift, and go to state 20

    $default  reduce using rule 18 (VarDec)


state 16

    4 ExternDef: Specifier ExternDecList . ';'

    ';'  shift, and go to state 21


state 17

    9 ExternDecList: VarDec .
   10              | VarDec . ',' ExternDecList
   19 VarDec: VarDec . '[' NUMBER ']'
   20       | VarDec . '[' error ']'

    ','  shift, and go to state 22
    '['  shift, and go to state 23

    $default  reduce using rule 9 (ExternDecList)


state 18

    6 ExternDef: Specifier FunDec . CompSt
    7          | Specifier FunDec . ';'

    '{'  shift, and go to state 24
    ';'  shift, and go to state 25

    CompSt  go to state 26


state 19

   13 StructSpecifier: STRUCT OptTag '{' . DefList '}'

    STRUCT  shift, and go to state 1
    TYPE    shift, and go to state 2

    $default  reduce using rule 41 (DefList)

    Specifier        go to state 27
    StructSpecifier  go to state 7
    DefList          go to state 28
    Def              go to state 29


state 20

   21 FunDec: IDENTIFIER '(' . VarList ')'
   22       | IDENTIFIER '(' . ')'

    ')'     shift, and go to state 30
    STRUCT  shift, and go to state 1
    TYPE    shift, and go to state 2

    Specifier        go to state 31
    StructSpecifier  go to state 7
    VarList          go to state 32
    ParamDec         go to state 33


state 21

    4 ExternDef: Specifier ExternDecList ';' .

    $default  reduce using rule 4 (ExternDef)


state 22

   10 ExternDecList: VarDec ',' . ExternDecList

    IDENTIFIER  shift, and go to state 34

    ExternDecList  go to state 35
    VarDec         go to state 17


state 23

   19 VarDec: VarDec '[' . NUMBER ']'
   20       | VarDec '[' . error ']'

    error   shift, and go to state 36
    NUMBER  shift, and go to state 37


state 24

   26 CompSt: '{' . DefList StmtList '}'
   27       | '{' . DefList StmtList error

    STRUCT  shift, and go to state 1
    TYPE    shift, and go to state 2

    $default  reduce using rule 41 (DefList)

    Specifier        go to state 27
    StructSpecifier  go to state 7
    DefList          go to state 38
    Def              go to state 29


state 25

    7 ExternDef: Specifier FunDec ';' .

    $default  reduce using rule 7 (ExternDef)


state 26

    6 ExternDef: Specifier FunDec CompSt .

    $default  reduce using rule 6 (ExternDef)


state 27

   42 Def: Specifier . DecList ';'
   43    | Specifier . error ';'

    error       shift, and go to state 39
    IDENTIFIER  shift, and go to state 34

    VarDec   go to state 40
    DecList  go to state 41
    Dec      go to state 42


state 28

   13 StructSpecifier: STRUCT OptTag '{' DefList . '}'

    '}'  shift, and go to state 43


state 29

   40 DefList: Def . DefList

    STRUCT  shift, and go to state 1
    TYPE    shift, and go to state 2

    $default  reduce using rule 41 (DefList)

    Specifier        go to state 27
    StructSpecifier  go to state 7
    DefList          go to state 44
    Def              go to state 29


state 30

   22 FunDec: IDENTIFIER '(' ')' .

    $default  reduce using rule 22 (FunDec)


state 31

   25 ParamDec: Specifier . VarDec

    IDENTIFIER  shift, and go to state 34

    VarDec  go to state 45


state 32

   21 FunDec: IDENTIFIER '(' VarList . ')'

    ')'  shift, and go to state 46


state 33

   23 VarList: ParamDec . ',' VarList
   24        | ParamDec .

    ','  shift, and go to state 47

    $default  reduce using rule 24 (VarList)


state 34

   18 VarDec: IDENTIFIER .

    $default  reduce using rule 18 (VarDec)


state 35

   10 ExternDecList: VarDec ',' ExternDecList .

    $default  reduce using rule 10 (ExternDecList)


state 36

   20 VarDec: VarDec '[' error . ']'

    ']'  shift, and go to state 48


state 37

   19 VarDec: VarDec '[' NUMBER . ']'

    ']'  shift, and go to state 49


state 38

   26 CompSt: '{' DefList . StmtList '}'
   27       | '{' DefList . StmtList error

    '-'         shift, and go to state 50
    '!'         shift, and go to state 51
    '('         shift, and go to state 52
    '{'         shift, and go to state 24
    FLOAT       shift, and go to state 53
    IDENTIFIER  shift, and go to state 54
    RETURN      shift, and go to state 55
    IF          shift, and go to state 56
    WHILE       shift, and go to state 57
    NUMBER      shift, and go to state 58
    FOR         shift, and go to state 59

    $default  reduce using rule 29 (StmtList)

    CompSt    go to state 60
    StmtList  go to state 61
    Stmt      go to state 62
    Exp       go to state 63


state 39

   43 Def: Specifier error . ';'

    ';'  shift, and go to state 64


state 40

   19 VarDec: VarDec . '[' NUMBER ']'
   20       | VarDec . '[' error ']'
   46 Dec: VarDec .
   47    | VarDec . '=' Exp

    '='  shift, and go to state 65
    '['  shift, and go to state 23

    $default  reduce using rule 46 (Dec)


state 41

   42 Def: Specifier DecList . ';'

    ';'  shift, and go to state 66


state 42

   44 DecList: Dec .
   45        | Dec . ',' DecList

    ','  shift, and go to state 67

    $default  reduce using rule 44 (DecList)


state 43

   13 StructSpecifier: STRUCT OptTag '{' DefList '}' .

    $default  reduce using rule 13 (StructSpecifier)


state 44

   40 DefList: Def DefList .

    $default  reduce using rule 40 (DefList)


state 45

   19 VarDec: VarDec . '[' NUMBER ']'
   20       | VarDec . '[' error ']'
   25 ParamDec: Specifier VarDec .

    '['  shift, and go to state 23

    $default  reduce using rule 25 (ParamDec)


state 46

   21 FunDec: IDENTIFIER '(' VarList ')' .

    $default  reduce using rule 21 (FunDec)


state 47

   23 VarList: ParamDec ',' . VarList

    STRUCT  shift, and go to state 1
    TYPE    shift, and go to state 2

    Specifier        go to state 31
    StructSpecifier  go to state 7
    VarList          go to state 68
    ParamDec         go to state 33


state 48

   20 VarDec: VarDec '[' error ']' .

    $default  reduce using rule 20 (VarDec)


state 49

   19 VarDec: VarDec '[' NUMBER ']' .

    $default  reduce using rule 19 (VarDec)


state 50

   57 Exp: '-' . Exp

    '-'         shift, and go to state 50
    '!'         shift, and go to state 51
    '('         shift, and go to state 52
    FLOAT       shift, and go to state 53
    IDENTIFIER  shift, and go to state 54
    NUMBER      shift, and go to state 58

    Exp  go to state 69


state 51

   58 Exp: '!' . Exp

    '-'         shift, and go to state 50
    '!'         shift, and go to state 51
    '('         shift, and go to state 52
    FLOAT       shift, and go to state 53
    IDENTIFIER  shift, and go to state 54
    NUMBER      shift, and go to state 58

    Exp  go to state 70


state 52

   56 Exp: '(' . Exp ')'

    '-'         shift, and go to state 50
    '!'         shift, and go to state 51
    '('         shift, and go to state 52
    FLOAT       shift, and go to state 53
    IDENTIFIER  shift, and go to state 54
    NUMBER      shift, and go to state 58

    Exp  go to state 71


state 53

   67 Exp: FLOAT .

    $default  reduce using rule 67 (Exp)


state 54

   59 Exp: IDENTIFIER . '(' Args ')'
   60    | IDENTIFIER . '(' error
   61    | IDENTIFIER . '(' ')'
   65    | IDENTIFIER .

    '('  shift, and go to state 72

    $default  reduce using rule 65 (Exp)


state 55

   32 Stmt: RETURN . Exp ';'
   33     | RETURN . error ';'

    error       shift, and go to state 73
    '-'         shift, and go to state 50
    '!'         shift, and go to state 51
    '('         shift, and go to state 52
    FLOAT       shift, and go to state 53
    IDENTIFIER  shift, and go to state 54
    NUMBER      shift, and go to state 58

    Exp  go to state 74


state 56

   34 Stmt: IF . '(' Exp ')' Stmt
   35     | IF . '(' Exp ')' Stmt ELSE Stmt
   36     | IF . '(' Exp ')' error ELSE Stmt

    '('  shift, and go to state 75


state 57

   37 Stmt: WHILE . '(' Exp ')' Stmt

    '('  shift, and go to state 76


state 58

   66 Exp: NUMBER .

    $default  reduce using rule 66 (Exp)


state 59

   38 Stmt: FOR . '(' Exp ';' Exp ';' Exp ')' Stmt

    '('  shift, and go to state 77


state 60

   31 Stmt: CompSt .

    $default  reduce using rule 31 (Stmt)


state 61

   26 CompSt: '{' DefList StmtList . '}'
   27       | '{' DefList StmtList . error

    error  shift, and go to state 78
    '}'    shift, and go to state 79


state 62

   28 StmtList: Stmt . StmtList

    '-'         shift, and go to state 50
    '!'         shift, and go to state 51
    '('         shift, and go to state 52
    '{'         shift, and go to state 24
    FLOAT       shift, and go to state 53
    IDENTIFIER  shift, and go to state 54
    RETURN      shift, and go to state 55
    IF          shift, and go to state 56
    WHILE       shift, and go to state 57
    NUMBER      shift, and go to state 58
    FOR         shift, and go to state 59

    $default  reduce using rule 29 (StmtList)

    CompSt    go to state 60
    StmtList  go to state 80
    Stmt      go to state 62
    Exp       go to state 63


state 63

   30 Stmt: Exp . ';'
   39     | Exp . error
   48 Exp: Exp . '=' Exp
   49    | Exp . AND Exp
   50    | Exp . OR Exp
   51    | Exp . RELOP Exp
   52    | Exp . '+' Exp
   53    | Exp . '-' Exp
   54    | Exp . '*' Exp
   55    | Exp . '/' Exp
   62    | Exp . '[' Exp ']'
   63    | Exp . '[' error
   64    | Exp . '.' IDENTIFIER

    error  shift, and go to state 81
    '='    shift, and go to state 82
    '+'    shift, and go to state 83
    RELOP  shift, and go to state 84
    '-'    shift, and go to state 85
    '*'    shift, and go to state 86
    '/'    shift, and go to state 87
    AND    shift, and go to state 88
    '.'    shift, and go to state 89
    OR     shift, and go to state 90
    '['    shift, and go to state 91
    ';'    shift, and go to state 92


state 64

   43 Def: Specifier error ';' .

    $default  reduce using rule 43 (Def)


state 65

   47 Dec: VarDec '=' . Exp

    '-'         shift, and go to state 50
    '!'         shift, and go to state 51
    '('         shift, and go to state 52
    FLOAT       shift, and go to state 53
    IDENTIFIER  shift, and go to state 54
    NUMBER      shift, and go to state 58

    Exp  go to state 93


state 66

   42 Def: Specifier DecList ';' .

    $default  reduce using rule 42 (Def)


state 67

   45 DecList: Dec ',' . DecList

    IDENTIFIER  shift, and go to state 34

    VarDec   go to state 40
    DecList  go to state 94
    Dec      go to state 42


state 68

   23 VarList: ParamDec ',' VarList .

    $default  reduce using rule 23 (VarList)


state 69

   48 Exp: Exp . '=' Exp
   49    | Exp . AND Exp
   50    | Exp . OR Exp
   51    | Exp . RELOP Exp
   52    | Exp . '+' Exp
   53    | Exp . '-' Exp
   54    | Exp . '*' Exp
   55    | Exp . '/' Exp
   57    | '-' Exp .
   62    | Exp . '[' Exp ']'
   63    | Exp . '[' error
   64    | Exp . '.' IDENTIFIER

    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    '.'  shift, and go to state 89
    '['  shift, and go to state 91

    $default  reduce using rule 57 (Exp)


state 70

   48 Exp: Exp . '=' Exp
   49    | Exp . AND Exp
   50    | Exp . OR Exp
   51    | Exp . RELOP Exp
   52    | Exp . '+' Exp
   53    | Exp . '-' Exp
   54    | Exp . '*' Exp
   55    | Exp . '/' Exp
   58    | '!' Exp .
   62    | Exp . '[' Exp ']'
   63    | Exp . '[' error
   64    | Exp . '.' IDENTIFIER

    '.'  shift, and go to state 89
    '['  shift, and go to state 91

    $default  reduce using rule 58 (Exp)


state 71

   48 Exp: Exp . '=' Exp
   49    | Exp . AND Exp
   50    | Exp . OR Exp
   51    | Exp . RELOP Exp
   52    | Exp . '+' Exp
   53    | Exp . '-' Exp
   54    | Exp . '*' Exp
   55    | Exp . '/' Exp
   56    | '(' Exp . ')'
   62    | Exp . '[' Exp ']'
   63    | Exp . '[' error
   64    | Exp . '.' IDENTIFIER

    '='    shift, and go to state 82
    '+'    shift, and go to state 83
    RELOP  shift, and go to state 84
    '-'    shift, and go to state 85
    '*'    shift, and go to state 86
    '/'    shift, and go to state 87
    AND    shift, and go to state 88
    '.'    shift, and go to state 89
    OR     shift, and go to state 90
    ')'    shift, and go to state 95
    '['    shift, and go to state 91


state 72

   59 Exp: IDENTIFIER '(' . Args ')'
   60    | IDENTIFIER '(' . error
   61    | IDENTIFIER '(' . ')'

    error       shift, and go to state 96
    '-'         shift, and go to state 50
    '!'         shift, and go to state 51
    '('         shift, and go to state 52
    ')'         shift, and go to state 97
    FLOAT       shift, and go to state 53
    IDENTIFIER  shift, and go to state 54
    NUMBER      shift, and go to state 58

    Exp   go to state 98
    Args  go to state 99


state 73

   33 Stmt: RETURN error . ';'

    ';'  shift, and go to state 100


state 74

   32 Stmt: RETURN Exp . ';'
   48 Exp: Exp . '=' Exp
   49    | Exp . AND Exp
   50    | Exp . OR Exp
   51    | Exp . RELOP Exp
   52    | Exp . '+' Exp
   53    | Exp . '-' Exp
   54    | Exp . '*' Exp
   55    | Exp . '/' Exp
   62    | Exp . '[' Exp ']'
   63    | Exp . '[' error
   64    | Exp . '.' IDENTIFIER

    '='    shift, and go to state 82
    '+'    shift, and go to state 83
    RELOP  shift, and go to state 84
    '-'    shift, and go to state 85
    '*'    shift, and go to state 86
    '/'    shift, and go to state 87
    AND    shift, and go to state 88
    '.'    shift, and go to state 89
    OR     shift, and go to state 90
    '['    shift, and go to state 91
    ';'    shift, and go to state 101


state 75

   34 Stmt: IF '(' . Exp ')' Stmt
   35     | IF '(' . Exp ')' Stmt ELSE Stmt
   36     | IF '(' . Exp ')' error ELSE Stmt

    '-'         shift, and go to state 50
    '!'         shift, and go to state 51
    '('         shift, and go to state 52
    FLOAT       shift, and go to state 53
    IDENTIFIER  shift, and go to state 54
    NUMBER      shift, and go to state 58

    Exp  go to state 102


state 76

   37 Stmt: WHILE '(' . Exp ')' Stmt

    '-'         shift, and go to state 50
    '!'         shift, and go to state 51
    '('         shift, and go to state 52
    FLOAT       shift, and go to state 53
    IDENTIFIER  shift, and go to state 54
    NUMBER      shift, and go to state 58

    Exp  go to state 103


state 77

   38 Stmt: FOR '(' . Exp ';' Exp ';' Exp ')' Stmt

    '-'         shift, and go to state 50
    '!'         shift, and go to state 51
    '('         shift, and go to state 52
    FLOAT       shift, and go to state 53
    IDENTIFIER  shift, and go to state 54
    NUMBER      shift, and go to state 58

    Exp  go to state 104


state 78

   27 CompSt: '{' DefList StmtList error .

    $default  reduce using rule 27 (CompSt)


state 79

   26 CompSt: '{' DefList StmtList '}' .

    $default  reduce using rule 26 (CompSt)


state 80

   28 StmtList: Stmt StmtList .

    $default  reduce using rule 28 (StmtList)


state 81

   39 Stmt: Exp error .

    $default  reduce using rule 39 (Stmt)


state 82

   48 Exp: Exp '=' . Exp

    '-'         shift, and go to state 50
    '!'         shift, and go to state 51
    '('         shift, and go to state 52
    FLOAT       shift, and go to state 53
    IDENTIFIER  shift, and go to state 54
    NUMBER      shift, and go to state 58

    Exp  go to state 105


state 83

   52 Exp: Exp '+' . Exp

    '-'         shift, and go to state 50
    '!'         shift, and go to state 51
    '('         shift, and go to state 52
    FLOAT       shift, and go to state 53
    IDENTIFIER  shift, and go to state 54
    NUMBER      shift, and go to state 58

    Exp  go to state 106


state 84

   51 Exp: Exp RELOP . Exp

    '-'         shift, and go to state 50
    '!'         shift, and go to state 51
    '('         shift, and go to state 52
    FLOAT       shift, and go to state 53
    IDENTIFIER  shift, and go to state 54
    NUMBER      shift, and go to state 58

    Exp  go to state 107


state 85

   53 Exp: Exp '-' . Exp

    '-'         shift, and go to state 50
    '!'         shift, and go to state 51
    '('         shift, and go to state 52
    FLOAT       shift, and go to state 53
    IDENTIFIER  shift, and go to state 54
    NUMBER      shift, and go to state 58

    Exp  go to state 108


state 86

   54 Exp: Exp '*' . Exp

    '-'         shift, and go to state 50
    '!'         shift, and go to state 51
    '('         shift, and go to state 52
    FLOAT       shift, and go to state 53
    IDENTIFIER  shift, and go to state 54
    NUMBER      shift, and go to state 58

    Exp  go to state 109


state 87

   55 Exp: Exp '/' . Exp

    '-'         shift, and go to state 50
    '!'         shift, and go to state 51
    '('         shift, and go to state 52
    FLOAT       shift, and go to state 53
    IDENTIFIER  shift, and go to state 54
    NUMBER      shift, and go to state 58

    Exp  go to state 110


state 88

   49 Exp: Exp AND . Exp

    '-'         shift, and go to state 50
    '!'         shift, and go to state 51
    '('         shift, and go to state 52
    FLOAT       shift, and go to state 53
    IDENTIFIER  shift, and go to state 54
    NUMBER      shift, and go to state 58

    Exp  go to state 111


state 89

   64 Exp: Exp '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 112


state 90

   50 Exp: Exp OR . Exp

    '-'         shift, and go to state 50
    '!'         shift, and go to state 51
    '('         shift, and go to state 52
    FLOAT       shift, and go to state 53
    IDENTIFIER  shift, and go to state 54
    NUMBER      shift, and go to state 58

    Exp  go to state 113


state 91

   62 Exp: Exp '[' . Exp ']'
   63    | Exp '[' . error

    error       shift, and go to state 114
    '-'         shift, and go to state 50
    '!'         shift, and go to state 51
    '('         shift, and go to state 52
    FLOAT       shift, and go to state 53
    IDENTIFIER  shift, and go to state 54
    NUMBER      shift, and go to state 58

    Exp  go to state 115


state 92

   30 Stmt: Exp ';' .

    $default  reduce using rule 30 (Stmt)


state 93

   47 Dec: VarDec '=' Exp .
   48 Exp: Exp . '=' Exp
   49    | Exp . AND Exp
   50    | Exp . OR Exp
   51    | Exp . RELOP Exp
   52    | Exp . '+' Exp
   53    | Exp . '-' Exp
   54    | Exp . '*' Exp
   55    | Exp . '/' Exp
   62    | Exp . '[' Exp ']'
   63    | Exp . '[' error
   64    | Exp . '.' IDENTIFIER

    '='    shift, and go to state 82
    '+'    shift, and go to state 83
    RELOP  shift, and go to state 84
    '-'    shift, and go to state 85
    '*'    shift, and go to state 86
    '/'    shift, and go to state 87
    AND    shift, and go to state 88
    '.'    shift, and go to state 89
    OR     shift, and go to state 90
    '['    shift, and go to state 91

    $default  reduce using rule 47 (Dec)


state 94

   45 DecList: Dec ',' DecList .

    $default  reduce using rule 45 (DecList)


state 95

   56 Exp: '(' Exp ')' .

    $default  reduce using rule 56 (Exp)


state 96

   60 Exp: IDENTIFIER '(' error .

    $default  reduce using rule 60 (Exp)


state 97

   61 Exp: IDENTIFIER '(' ')' .

    $default  reduce using rule 61 (Exp)


state 98

   48 Exp: Exp . '=' Exp
   49    | Exp . AND Exp
   50    | Exp . OR Exp
   51    | Exp . RELOP Exp
   52    | Exp . '+' Exp
   53    | Exp . '-' Exp
   54    | Exp . '*' Exp
   55    | Exp . '/' Exp
   62    | Exp . '[' Exp ']'
   63    | Exp . '[' error
   64    | Exp . '.' IDENTIFIER
   68 Args: Exp . ',' Args
   69     | Exp .

    ','    shift, and go to state 116
    '='    shift, and go to state 82
    '+'    shift, and go to state 83
    RELOP  shift, and go to state 84
    '-'    shift, and go to state 85
    '*'    shift, and go to state 86
    '/'    shift, and go to state 87
    AND    shift, and go to state 88
    '.'    shift, and go to state 89
    OR     shift, and go to state 90
    '['    shift, and go to state 91

    $default  reduce using rule 69 (Args)


state 99

   59 Exp: IDENTIFIER '(' Args . ')'

    ')'  shift, and go to state 117


state 100

   33 Stmt: RETURN error ';' .

    $default  reduce using rule 33 (Stmt)


state 101

   32 Stmt: RETURN Exp ';' .

    $default  reduce using rule 32 (Stmt)


state 102

   34 Stmt: IF '(' Exp . ')' Stmt
   35     | IF '(' Exp . ')' Stmt ELSE Stmt
   36     | IF '(' Exp . ')' error ELSE Stmt
   48 Exp: Exp . '=' Exp
   49    | Exp . AND Exp
   50    | Exp . OR Exp
   51    | Exp . RELOP Exp
   52    | Exp . '+' Exp
   53    | Exp . '-' Exp
   54    | Exp . '*' Exp
   55    | Exp . '/' Exp
   62    | Exp . '[' Exp ']'
   63    | Exp . '[' error
   64    | Exp . '.' IDENTIFIER

    '='    shift, and go to state 82
    '+'    shift, and go to state 83
    RELOP  shift, and go to state 84
    '-'    shift, and go to state 85
    '*'    shift, and go to state 86
    '/'    shift, and go to state 87
    AND    shift, and go to state 88
    '.'    shift, and go to state 89
    OR     shift, and go to state 90
    ')'    shift, and go to state 118
    '['    shift, and go to state 91


state 103

   37 Stmt: WHILE '(' Exp . ')' Stmt
   48 Exp: Exp . '=' Exp
   49    | Exp . AND Exp
   50    | Exp . OR Exp
   51    | Exp . RELOP Exp
   52    | Exp . '+' Exp
   53    | Exp . '-' Exp
   54    | Exp . '*' Exp
   55    | Exp . '/' Exp
   62    | Exp . '[' Exp ']'
   63    | Exp . '[' error
   64    | Exp . '.' IDENTIFIER

    '='    shift, and go to state 82
    '+'    shift, and go to state 83
    RELOP  shift, and go to state 84
    '-'    shift, and go to state 85
    '*'    shift, and go to state 86
    '/'    shift, and go to state 87
    AND    shift, and go to state 88
    '.'    shift, and go to state 89
    OR     shift, and go to state 90
    ')'    shift, and go to state 119
    '['    shift, and go to state 91


state 104

   38 Stmt: FOR '(' Exp . ';' Exp ';' Exp ')' Stmt
   48 Exp: Exp . '=' Exp
   49    | Exp . AND Exp
   50    | Exp . OR Exp
   51    | Exp . RELOP Exp
   52    | Exp . '+' Exp
   53    | Exp . '-' Exp
   54    | Exp . '*' Exp
   55    | Exp . '/' Exp
   62    | Exp . '[' Exp ']'
   63    | Exp . '[' error
   64    | Exp . '.' IDENTIFIER

    '='    shift, and go to state 82
    '+'    shift, and go to state 83
    RELOP  shift, and go to state 84
    '-'    shift, and go to state 85
    '*'    shift, and go to state 86
    '/'    shift, and go to state 87
    AND    shift, and go to state 88
    '.'    shift, and go to state 89
    OR     shift, and go to state 90
    '['    shift, and go to state 91
    ';'    shift, and go to state 120


state 105

   48 Exp: Exp . '=' Exp
   48    | Exp '=' Exp .
   49    | Exp . AND Exp
   50    | Exp . OR Exp
   51    | Exp . RELOP Exp
   52    | Exp . '+' Exp
   53    | Exp . '-' Exp
   54    | Exp . '*' Exp
   55    | Exp . '/' Exp
   62    | Exp . '[' Exp ']'
   63    | Exp . '[' error
   64    | Exp . '.' IDENTIFIER

    '='    shift, and go to state 82
    '+'    shift, and go to state 83
    RELOP  shift, and go to state 84
    '-'    shift, and go to state 85
    '*'    shift, and go to state 86
    '/'    shift, and go to state 87
    AND    shift, and go to state 88
    '.'    shift, and go to state 89
    OR     shift, and go to state 90
    '['    shift, and go to state 91

    $default  reduce using rule 48 (Exp)


state 106

   48 Exp: Exp . '=' Exp
   49    | Exp . AND Exp
   50    | Exp . OR Exp
   51    | Exp . RELOP Exp
   52    | Exp . '+' Exp
   52    | Exp '+' Exp .
   53    | Exp . '-' Exp
   54    | Exp . '*' Exp
   55    | Exp . '/' Exp
   62    | Exp . '[' Exp ']'
   63    | Exp . '[' error
   64    | Exp . '.' IDENTIFIER

    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    '.'  shift, and go to state 89
    '['  shift, and go to state 91

    $default  reduce using rule 52 (Exp)


state 107

   48 Exp: Exp . '=' Exp
   49    | Exp . AND Exp
   50    | Exp . OR Exp
   51    | Exp . RELOP Exp
   51    | Exp RELOP Exp .
   52    | Exp . '+' Exp
   53    | Exp . '-' Exp
   54    | Exp . '*' Exp
   55    | Exp . '/' Exp
   62    | Exp . '[' Exp ']'
   63    | Exp . '[' error
   64    | Exp . '.' IDENTIFIER

    '+'  shift, and go to state 83
    '-'  shift, and go to state 85
    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    '.'  shift, and go to state 89
    '['  shift, and go to state 91

    $default  reduce using rule 51 (Exp)


state 108

   48 Exp: Exp . '=' Exp
   49    | Exp . AND Exp
   50    | Exp . OR Exp
   51    | Exp . RELOP Exp
   52    | Exp . '+' Exp
   53    | Exp . '-' Exp
   53    | Exp '-' Exp .
   54    | Exp . '*' Exp
   55    | Exp . '/' Exp
   62    | Exp . '[' Exp ']'
   63    | Exp . '[' error
   64    | Exp . '.' IDENTIFIER

    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    '.'  shift, and go to state 89
    '['  shift, and go to state 91

    $default  reduce using rule 53 (Exp)


state 109

   48 Exp: Exp . '=' Exp
   49    | Exp . AND Exp
   50    | Exp . OR Exp
   51    | Exp . RELOP Exp
   52    | Exp . '+' Exp
   53    | Exp . '-' Exp
   54    | Exp . '*' Exp
   54    | Exp '*' Exp .
   55    | Exp . '/' Exp
   62    | Exp . '[' Exp ']'
   63    | Exp . '[' error
   64    | Exp . '.' IDENTIFIER

    '.'  shift, and go to state 89
    '['  shift, and go to state 91

    $default  reduce using rule 54 (Exp)


state 110

   48 Exp: Exp . '=' Exp
   49    | Exp . AND Exp
   50    | Exp . OR Exp
   51    | Exp . RELOP Exp
   52    | Exp . '+' Exp
   53    | Exp . '-' Exp
   54    | Exp . '*' Exp
   55    | Exp . '/' Exp
   55    | Exp '/' Exp .
   62    | Exp . '[' Exp ']'
   63    | Exp . '[' error
   64    | Exp . '.' IDENTIFIER

    '.'  shift, and go to state 89
    '['  shift, and go to state 91

    $default  reduce using rule 55 (Exp)


state 111

   48 Exp: Exp . '=' Exp
   49    | Exp . AND Exp
   49    | Exp AND Exp .
   50    | Exp . OR Exp
   51    | Exp . RELOP Exp
   52    | Exp . '+' Exp
   53    | Exp . '-' Exp
   54    | Exp . '*' Exp
   55    | Exp . '/' Exp
   62    | Exp . '[' Exp ']'
   63    | Exp . '[' error
   64    | Exp . '.' IDENTIFIER

    '+'    shift, and go to state 83
    RELOP  shift, and go to state 84
    '-'    shift, and go to state 85
    '*'    shift, and go to state 86
    '/'    shift, and go to state 87
    '.'    shift, and go to state 89
    '['    shift, and go to state 91

    $default  reduce using rule 49 (Exp)


state 112

   64 Exp: Exp '.' IDENTIFIER .

    $default  reduce using rule 64 (Exp)


state 113

   48 Exp: Exp . '=' Exp
   49    | Exp . AND Exp
   50    | Exp . OR Exp
   50    | Exp OR Exp .
   51    | Exp . RELOP Exp
   52    | Exp . '+' Exp
   53    | Exp . '-' Exp
   54    | Exp . '*' Exp
   55    | Exp . '/' Exp
   62    | Exp . '[' Exp ']'
   63    | Exp . '[' error
   64    | Exp . '.' IDENTIFIER

    '+'    shift, and go to state 83
    RELOP  shift, and go to state 84
    '-'    shift, and go to state 85
    '*'    shift, and go to state 86
    '/'    shift, and go to state 87
    AND    shift, and go to state 88
    '.'    shift, and go to state 89
    '['    shift, and go to state 91

    $default  reduce using rule 50 (Exp)


state 114

   63 Exp: Exp '[' error .

    $default  reduce using rule 63 (Exp)


state 115

   48 Exp: Exp . '=' Exp
   49    | Exp . AND Exp
   50    | Exp . OR Exp
   51    | Exp . RELOP Exp
   52    | Exp . '+' Exp
   53    | Exp . '-' Exp
   54    | Exp . '*' Exp
   55    | Exp . '/' Exp
   62    | Exp . '[' Exp ']'
   62    | Exp '[' Exp . ']'
   63    | Exp . '[' error
   64    | Exp . '.' IDENTIFIER

    '='    shift, and go to state 82
    '+'    shift, and go to state 83
    RELOP  shift, and go to state 84
    '-'    shift, and go to state 85
    '*'    shift, and go to state 86
    '/'    shift, and go to state 87
    AND    shift, and go to state 88
    '.'    shift, and go to state 89
    OR     shift, and go to state 90
    '['    shift, and go to state 91
    ']'    shift, and go to state 121


state 116

   68 Args: Exp ',' . Args

    '-'         shift, and go to state 50
    '!'         shift, and go to state 51
    '('         shift, and go to state 52
    FLOAT       shift, and go to state 53
    IDENTIFIER  shift, and go to state 54
    NUMBER      shift, and go to state 58

    Exp   go to state 98
    Args  go to state 122


state 117

   59 Exp: IDENTIFIER '(' Args ')' .

    $default  reduce using rule 59 (Exp)


state 118

   34 Stmt: IF '(' Exp ')' . Stmt
   35     | IF '(' Exp ')' . Stmt ELSE Stmt
   36     | IF '(' Exp ')' . error ELSE Stmt

    error       shift, and go to state 123
    '-'         shift, and go to state 50
    '!'         shift, and go to state 51
    '('         shift, and go to state 52
    '{'         shift, and go to state 24
    FLOAT       shift, and go to state 53
    IDENTIFIER  shift, and go to state 54
    RETURN      shift, and go to state 55
    IF          shift, and go to state 56
    WHILE       shift, and go to state 57
    NUMBER      shift, and go to state 58
    FOR         shift, and go to state 59

    CompSt  go to state 60
    Stmt    go to state 124
    Exp     go to state 63


state 119

   37 Stmt: WHILE '(' Exp ')' . Stmt

    '-'         shift, and go to state 50
    '!'         shift, and go to state 51
    '('         shift, and go to state 52
    '{'         shift, and go to state 24
    FLOAT       shift, and go to state 53
    IDENTIFIER  shift, and go to state 54
    RETURN      shift, and go to state 55
    IF          shift, and go to state 56
    WHILE       shift, and go to state 57
    NUMBER      shift, and go to state 58
    FOR         shift, and go to state 59

    CompSt  go to state 60
    Stmt    go to state 125
    Exp     go to state 63


state 120

   38 Stmt: FOR '(' Exp ';' . Exp ';' Exp ')' Stmt

    '-'         shift, and go to state 50
    '!'         shift, and go to state 51
    '('         shift, and go to state 52
    FLOAT       shift, and go to state 53
    IDENTIFIER  shift, and go to state 54
    NUMBER      shift, and go to state 58

    Exp  go to state 126


state 121

   62 Exp: Exp '[' Exp ']' .

    $default  reduce using rule 62 (Exp)


state 122

   68 Args: Exp ',' Args .

    $default  reduce using rule 68 (Args)


state 123

   36 Stmt: IF '(' Exp ')' error . ELSE Stmt

    ELSE  shift, and go to state 127


state 124

   34 Stmt: IF '(' Exp ')' Stmt .
   35     | IF '(' Exp ')' Stmt . ELSE Stmt

    ELSE  shift, and go to state 128

    $default  reduce using rule 34 (Stmt)


state 125

   37 Stmt: WHILE '(' Exp ')' Stmt .

    $default  reduce using rule 37 (Stmt)


state 126

   38 Stmt: FOR '(' Exp ';' Exp . ';' Exp ')' Stmt
   48 Exp: Exp . '=' Exp
   49    | Exp . AND Exp
   50    | Exp . OR Exp
   51    | Exp . RELOP Exp
   52    | Exp . '+' Exp
   53    | Exp . '-' Exp
   54    | Exp . '*' Exp
   55    | Exp . '/' Exp
   62    | Exp . '[' Exp ']'
   63    | Exp . '[' error
   64    | Exp . '.' IDENTIFIER

    '='    shift, and go to state 82
    '+'    shift, and go to state 83
    RELOP  shift, and go to state 84
    '-'    shift, and go to state 85
    '*'    shift, and go to state 86
    '/'    shift, and go to state 87
    AND    shift, and go to state 88
    '.'    shift, and go to state 89
    OR     shift, and go to state 90
    '['    shift, and go to state 91
    ';'    shift, and go to state 129


state 127

   36 Stmt: IF '(' Exp ')' error ELSE . Stmt

    '-'         shift, and go to state 50
    '!'         shift, and go to state 51
    '('         shift, and go to state 52
    '{'         shift, and go to state 24
    FLOAT       shift, and go to state 53
    IDENTIFIER  shift, and go to state 54
    RETURN      shift, and go to state 55
    IF          shift, and go to state 56
    WHILE       shift, and go to state 57
    NUMBER      shift, and go to state 58
    FOR         shift, and go to state 59

    CompSt  go to state 60
    Stmt    go to state 130
    Exp     go to state 63


state 128

   35 Stmt: IF '(' Exp ')' Stmt ELSE . Stmt

    '-'         shift, and go to state 50
    '!'         shift, and go to state 51
    '('         shift, and go to state 52
    '{'         shift, and go to state 24
    FLOAT       shift, and go to state 53
    IDENTIFIER  shift, and go to state 54
    RETURN      shift, and go to state 55
    IF          shift, and go to state 56
    WHILE       shift, and go to state 57
    NUMBER      shift, and go to state 58
    FOR         shift, and go to state 59

    CompSt  go to state 60
    Stmt    go to state 131
    Exp     go to state 63


state 129

   38 Stmt: FOR '(' Exp ';' Exp ';' . Exp ')' Stmt

    '-'         shift, and go to state 50
    '!'         shift, and go to state 51
    '('         shift, and go to state 52
    FLOAT       shift, and go to state 53
    IDENTIFIER  shift, and go to state 54
    NUMBER      shift, and go to state 58

    Exp  go to state 132


state 130

   36 Stmt: IF '(' Exp ')' error ELSE Stmt .

    $default  reduce using rule 36 (Stmt)


state 131

   35 Stmt: IF '(' Exp ')' Stmt ELSE Stmt .

    $default  reduce using rule 35 (Stmt)


state 132

   38 Stmt: FOR '(' Exp ';' Exp ';' Exp . ')' Stmt
   48 Exp: Exp . '=' Exp
   49    | Exp . AND Exp
   50    | Exp . OR Exp
   51    | Exp . RELOP Exp
   52    | Exp . '+' Exp
   53    | Exp . '-' Exp
   54    | Exp . '*' Exp
   55    | Exp . '/' Exp
   62    | Exp . '[' Exp ']'
   63    | Exp . '[' error
   64    | Exp . '.' IDENTIFIER

    '='    shift, and go to state 82
    '+'    shift, and go to state 83
    RELOP  shift, and go to state 84
    '-'    shift, and go to state 85
    '*'    shift, and go to state 86
    '/'    shift, and go to state 87
    AND    shift, and go to state 88
    '.'    shift, and go to state 89
    OR     shift, and go to state 90
    ')'    shift, and go to state 133
    '['    shift, and go to state 91


state 133

   38 Stmt: FOR '(' Exp ';' Exp ';' Exp ')' . Stmt

    '-'         shift, and go to state 50
    '!'         shift, and go to state 51
    '('         shift, and go to state 52
    '{'         shift, and go to state 24
    FLOAT       shift, and go to state 53
    IDENTIFIER  shift, and go to state 54
    RETURN      shift, and go to state 55
    IF          shift, and go to state 56
    WHILE       shift, and go to state 57
    NUMBER      shift, and go to state 58
    FOR         shift, and go to state 59

    CompSt  go to state 60
    Stmt    go to state 134
    Exp     go to state 63


state 134

   38 Stmt: FOR '(' Exp ';' Exp ';' Exp ')' Stmt .

    $default  reduce using rule 38 (Stmt)
